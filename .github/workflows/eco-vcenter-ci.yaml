---
name: Ansible Eco vCenter Integration Test
on:
  workflow_dispatch:
  issue_comment:
    types: [created]
jobs:
  ansible_integration_test:
    runs-on: ["self-hosted", linux, X64]
    if: ${{ github.event_name == 'issue_comment' && 
         github.event.issue.pull_request && 
         github.event.comment.body == '/run-integration-on-vcenter'}}
    steps:
      - name: Github API Request
        id: request
        uses: octokit/request-action@v2.0.0
        with:
          route: ${{ github.event.issue.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout PR Branch
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ fromJson(steps.request.outputs.data).head.repo.full_name }}
          ref: ${{ fromJson(steps.request.outputs.data).head.ref }}

      - name: Update pip, git
        if: runner.os == 'Linux' && startsWith(runner.name, 'ubuntu')
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install podman

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          path: ansible_collections/cloud/vmware_ops

      - name: Generate integration config
        working-directory: ansible_collections/cloud/vmware_ops/scripts
        run: |
          chmod +x generate_integration_config.sh
          ./generate_integration_config.sh
        env:
          VCENTER_HOSTNAME: ${{ secrets.VCENTER_HOSTNAME }}
          VCENTER_USERNAME: ${{ secrets.VCENTER_USERNAME }}
          VCENTER_PASSWORD: ${{ secrets.VCENTER_PASSWORD }}

      - name: Run integration tests
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          make eco-vcenter-ci
        working-directory: ansible_collections/cloud/vmware_ops
        env:
          ANSIBLE_COLLECTIONS_PATH: "${{ github.workspace }}"
