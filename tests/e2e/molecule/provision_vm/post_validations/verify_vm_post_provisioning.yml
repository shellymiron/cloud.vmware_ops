---
- name: Check {{ item.provision_vm_name }} VM existence
  community.vmware.vmware_vm_info:
    hostname: "{{ vCenter_hostname }}"
    username: "{{ vCenter_username }}"
    password: "{{ vCenter_password }}"
    validate_certs: "{{ provision_vm_validate_certs }}"
    vm_name: "{{ item.provision_vm_name }}"
  register: vm_info

- name: Fail the task if the VM doesn't exist
  ansible.builtin.fail:
    msg: "Provisioned VM does not exist"
  when: vm_info is not defined or vm_info.failed

- name: Validate {{ item.provision_vm_name }} VM properties
  ansible.builtin.assert:
    that:
      - vm_info.virtual_machines[0].guest_name == item.provision_vm_name
      - vm_info.virtual_machines[0].cluster == provision_vm_cluster
      - vm_info.virtual_machines[0].datacenter == provision_vm_datacenter
      - vm_info.virtual_machines[0].folder == provision_vm_folder
      - vm_info.virtual_machines[0].power_state | lower == item.provision_vm_state
      # - vm_info.virtual_machines[0].resource_pool == item.provision_vm_resource_pool

- name: Validate {{ item.provision_vm_name }} VM datastore when datastore was defined in provision_vm_datastore
  ansible.builtin.assert:
    that:
      - vm_info.virtual_machines[0].datastore_url[0].name == item.provision_vm_datastore
  when: "'provision_vm_datastore' in item"

- name: Validate {{ item.provision_vm_name }} VM datastore when datastore was defined in provision_vm_disk
  ansible.builtin.assert:
    that:
      - vm_info.virtual_machines[0].datastore_url[0].name == item.provision_vm_disk[0].datastore
  when: "'provision_vm_datastore' not in item"